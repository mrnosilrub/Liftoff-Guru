---
import "../styles/globals.css";
import logoWhite from "../assets/logo-white.svg?url";
const { title = "Liftoff.Guru" } = Astro.props;
---
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>{title}</title>
  <link rel="preconnect" href="https://fonts.googleapis.com" />
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
  
</head>
<div class="min-h-screen bg-zinc-950 text-zinc-100 antialiased">
  <header class="sticky top-0 z-40 border-b border-zinc-800/60 bg-zinc-950/70 backdrop-blur-sm md:backdrop-blur relative">
    <nav class="mx-auto flex max-w-6xl items-center justify-between px-4 py-7">
      <a href="/" class="flex items-center gap-2 font-semibold tracking-tight">
        <img src={logoWhite} alt="Liftoff.Guru" class="h-6 w-6" />
        <span class="text-[24px] leading-none">Liftoff.Guru</span>
      </a>
      <button id="menu-button" class="md:hidden inline-flex items-center justify-center rounded-md border border-zinc-800 bg-zinc-900/60 p-2 text-zinc-200 hover:bg-zinc-900 focus:outline-none focus:ring-2 focus:ring-fuchsia-600" aria-expanded="false" aria-controls="mobile-menu" aria-label="Open menu">
        <svg class="h-5 w-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <line x1="3" y1="6" x2="21" y2="6" />
          <line x1="3" y1="12" x2="21" y2="12" />
          <line x1="3" y1="18" x2="21" y2="18" />
        </svg>
      </button>
      <ul class="hidden md:flex items-center gap-6 text-sm text-zinc-300">
        <li><a class="hover:text-white" href="/projects">Projects</a></li>
        <li><a class="hover:text-white" href="/about">About</a></li>
        <li><a class="hover:text-white" href="/blog">Blog</a></li>
        <li>
          <a class="rounded-lg bg-fuchsia-600 px-3 py-1.5 font-medium text-white hover:bg-fuchsia-500" href="/collaborate">Contact</a>
        </li>
      </ul>
    </nav>

    <!-- Mobile menu (absolute, slides/fades below header) -->
    <div
      id="mobile-menu"
      class="md:hidden absolute left-0 right-0 top-full pointer-events-none overflow-hidden border-b-0 border-zinc-800/60 bg-zinc-950/95 backdrop-blur-sm md:backdrop-blur"
      aria-hidden="true"
      style="height:0; opacity:0; transition: height 700ms ease-in-out, opacity 700ms ease-in-out; will-change: height, opacity;"
    >
      <div class="mx-auto max-w-6xl px-4 py-4">
        <ul class="flex flex-col gap-3 text-base text-zinc-200">
          <li><a class="block rounded-md px-2 py-2 hover:bg-zinc-900/60" href="/projects">Projects</a></li>
          <li><a class="block rounded-md px-2 py-2 hover:bg-zinc-900/60" href="/about">About</a></li>
          <li><a class="block rounded-md px-2 py-2 hover:bg-zinc-900/60" href="/blog">Blog</a></li>
          <li class="pt-2">
            <a class="inline-flex items-center justify-center rounded-lg bg-fuchsia-600 px-3 py-2 font-medium text-white hover:bg-fuchsia-500" href="/collaborate">Contact</a>
          </li>
        </ul>
      </div>
    </div>
  </header>

  <main class="mx-auto max-w-6xl px-4">
    <slot />
  </main>

  <footer class="mt-16 border-t border-zinc-800/60 py-10 text-sm text-zinc-400">
    <div class="mx-auto max-w-6xl px-4 flex items-center justify-between">
      <p>Â© {new Date().getFullYear()} Liftoff.Guru</p>
      <div class="flex gap-4">
        <a class="hover:text-white" href="/projects">Projects</a>
        <a class="hover:text-white" href="/about">About</a>
        <a class="hover:text-white" href="/collaborate">Collaborate</a>
      </div>
    </div>
  </footer>
</div>

<script type="module">
  const btn = document.getElementById('menu-button');
  const panel = document.getElementById('mobile-menu');
  if (btn && panel) {
    let isOpen = false;
    const openPanel = () => {
      panel.classList.add('border-b');
      panel.classList.remove('border-b-0');
      panel.classList.add('pointer-events-auto');
      panel.classList.remove('pointer-events-none');
      panel.setAttribute('aria-hidden', 'false');
      btn.setAttribute('aria-expanded', 'true');
      // Measure and animate height from 0 to content height
      panel.style.height = panel.scrollHeight + 'px';
      panel.style.opacity = '1';
      const onEnd = (e) => {
        if (e.propertyName === 'height') {
          panel.style.height = 'auto';
          panel.removeEventListener('transitionend', onEnd);
        }
      };
      panel.addEventListener('transitionend', onEnd);
    };
    const closePanel = () => {
      // Set fixed height before collapsing (if currently auto)
      if (panel.style.height === 'auto' || panel.style.height === '') {
        panel.style.height = panel.scrollHeight + 'px';
      }
      // Force reflow to ensure transition runs
      void panel.getBoundingClientRect();
      panel.style.height = '0px';
      panel.style.opacity = '0';
      panel.classList.add('pointer-events-none');
      panel.classList.remove('pointer-events-auto');
      panel.classList.add('border-b-0');
      panel.classList.remove('border-b');
      panel.setAttribute('aria-hidden', 'true');
      btn.setAttribute('aria-expanded', 'false');
    };
    const toggle = () => {
      isOpen ? closePanel() : openPanel();
      isOpen = !isOpen;
    };
    btn.addEventListener('click', toggle);
    panel.querySelectorAll('a').forEach((a) => a.addEventListener('click', () => {
      if (isOpen) toggle();
    }));
  }
</script>


